import numpy as np

def calculate_matrix_properties(matrix):
    try:
        # Convert the input to a NumPy array
        matrix = np.array(matrix, dtype=float)

        # Calculate eigenvalues and eigenvectors
        eigenvalues, eigenvectors = np.linalg.eig(matrix)

        # Calculate determinant
        determinant = np.linalg.det(matrix)

        return eigenvalues, eigenvectors, determinant

    except Exception as e:
        return f"Error: {e}"

# Get the matrix elements from the user
rows = int(input("Enter the number of rows: "))
cols = int(input("Enter the number of columns: "))

print("Enter matrix elements row-wise:")

# Initialize an empty matrix
user_matrix = []

# Get matrix elements from the user
for i in range(rows):
    row_input = input(f"Enter row {i + 1} elements separated by spaces: ")
    row_elements = list(map(float, row_input.split()))
    user_matrix.append(row_elements)

# Calculate eigenvalues, eigenvectors, and determinant
result = calculate_matrix_properties(user_matrix)

# Display the result
print("\nEigenvalues:")
print(result[0])

print("\nEigenvectors:")
print(result[1])

print("\nDeterminant:")
print(result[2])
